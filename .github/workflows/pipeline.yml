name: Pipeline

on: [push, pull_request]

jobs:
  nodejs-test:
    name: Tests NodeJS version (fail fast)
    runs-on: ubuntu-latest
    env:
      GOVUK_FRONTEND_DIFF_COMMAND: ./index.js
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.0.0
        with:
          node-version: 14
      - run: npm ci
      - name: Linting
        run: npm run lint
      - name: Run tests
        run: npm run test

  build:
    name: Build OS specific binaries
    runs-on: ubuntu-latest
    needs: nodejs-test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.0.0
        with:
          node-version: 14
      - run: npm ci
      - name: Build project
        run: npm run create-executable
      - uses: actions/upload-artifact@v2.0.1
        with:
          name: bin
          path: bin

  test:
    name: Test OS specific binaries
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            binary: govuk-frontend-diff-win.exe
            shell: cmd
          - os: ubuntu-latest
            binary: ./govuk-frontend-diff-linux
            shell: bash
          - os: macos-latest
            binary: ./govuk-frontend-diff-macos
            shell: bash
    env:
      GOVUK_FRONTEND_DIFF_COMMAND: ${{ matrix.binary }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.0.0
        with:
          node-version: 14
      - uses: actions/download-artifact@v2
        with:
          name: bin
      - run: npm ci
      - name: Run tests
        with:
          shell: ${{ matrix.shell }}
        run: |
          chmod +x ${{ matrix.binary }}
          npm test

  release:
    name: Release binaries
    needs: test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: bin
          path: bin
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Attach binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          for asset in ./bin/*; do
            assets+=("-a" "$asset")
          done
          githubref=${{ github.ref }}
          hub release edit "${assets[@]}" -m "${githubref##*/}" "${githubref##*/}"
